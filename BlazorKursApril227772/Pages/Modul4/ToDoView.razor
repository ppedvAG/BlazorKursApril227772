@page "/todo"
@inject IHttpClientFactory http
<h3>ToDoView</h3>

<div class="row">
    <div class="col">
        <div class="input-group">
            <input class="form-control" @bind-value="filter" @bind-value:event="oninput" />
            <button class="btn btn-outline-danger" type="button">obsolet</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col">
        <ul class="list-group list-group-flush">
            @if (Liste==null)
            {
                  <li class="list-group-item alert-danger">keine Daten</li>
            }
            else
            {
            @foreach (var item in Liste.Where(x=>x.title.Contains(filter)))
            {
                <li class="list-group-item">
                    @item.title
                </li>
            }
            }
        </ul>
    </div>
</div>

@code {
    List<ToDoModel> Liste;
    string filter="";

    protected override async Task OnInitializedAsync()
    {
        using var client = http.CreateClient();
        {
            Liste = await client.GetFromJsonAsync<List<ToDoModel>>("https://jsonplaceholder.typicode.com/todos");
        }
    }
}
